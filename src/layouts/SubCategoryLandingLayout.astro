---
import type { SubCategoryContentItem } from "../types/SubCategoryPageTypes";
import Base from "./Base.astro";
import type { TocData } from "../types/TableOfContentTypes.tsx";
import TableOfContentList from "@components/TableOfContentList";
import SubCategoryCard from "@components/SubCategoryCard.astro";
import { Breadcrumbs } from "astro-breadcrumbs";
import "astro-breadcrumbs/breadcrumbs.css";
const { data, ToCData, lang, baseSlug } = Astro.props;
const currentPath = Astro.url.pathname;
const parts = currentPath.split("/").filter(Boolean);
const last = parts.at(-1);
const subCategorySlug = last === "index" ? parts.at(-2) : last;

const metadata = {
  title: data.title,
};

type Props = {
  data: SubCategoryContentItem;
  ToCData: TocData | null;
  lang: string;
  baseSlug?: string;
};
---

<Base metadata={metadata} lang={lang}>
  <article class="w-full pt-1 article">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-0">
      <nav
        class="bg-lightTealGray md:col-span-3 pt-6 md:pt-12 w-full max-w-md mx-auto rounded-lg flex flex-col items-center"
      >
        <div
          class="mb-10 flex items-center justify-self-start text-superOfficeGreen"
        >
          <Breadcrumbs
            ariaLabel="A structured list of pages"
            linkTextFormat="sentence"
          >
            <svg
              slot="separator"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              ><polyline points="9 18 15 12 9 6"></polyline>
            </svg>
          </Breadcrumbs>
        </div>
        {
          ToCData && (
            <TableOfContentList
              client:only="react"
              inputItems={ToCData.items}
              slug={baseSlug ?? lang}
              isMainTable={true}
              isWebApiTOC={false}
            />
          )
        }
      </nav>

      <div class="w-full md:col-span-9 p-8 max-w-none">
        <div class="mb-6">
          <p class="text-2xl font-bold mb-1">
            {data.title}
          </p>
          <p class="">{data.summary}</p>
        </div>

        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-5 gap-y-7 auto-rows-max"
        >
          {
            data.landingContent.map((card) => {
              return (
                <SubCategoryCard
                  subCategory={subCategorySlug}
                  item={card}
                />
              );
            })
          }
        </div>
      </div>
    </div>
  </article>
</Base>
