---
import type { YamlManagedReferenceItem } from "~/types/YamlManagedReferenceTypes";
import YamlManagedReferenceConstructor from "@components/YamlManagedReferenceConstructor.astro";
import YamlManagedReferenceMethod from "@components/YamlManagedReferenceMethod.astro";

interface Props {
    items: YamlManagedReferenceItem[];
    api: string; // "crmscript", "webapi"
    baseUrl: string; // for child links
}

const { items, api, baseUrl } = Astro.props;

// Items[0] is the class itself
// Children (constructors, methods, properties, etc.)
const constructors = items.filter((i) => i.type === "Constructor");
const methods = items.filter((i) => i.type === "Method");
---

<section class="prose max-w-none">
    <!-- Constructors -->
    {
        constructors.length > 0 && (
            <section class="mb-6">
                <h2 class="text-2xl font-bold">Constructors</h2>
                {constructors.map((ctor) => (
                    <YamlManagedReferenceConstructor ctor={ctor} api={api} />
                ))}
            </section>
        )
    }
    <!-- Methods -->
    {
        methods.length > 0 && (
            <section class="mb-6">
                <h2 class="text-2xl font-bold">Methods</h2>
                {methods.map((method) => (
                    <YamlManagedReferenceMethod
                        method={method}
                        api={api}
                        baseUrl={baseUrl}
                    />
                ))}
            </section>
        )
    }
</section>
