---
import { Icon } from "astro-icon/components";
import Hamburger from "./Hamburger.astro";
import logo from "@assets/logo.svg";
import { trimSlash } from "@scripts/utils";
import Search from "@components/Search.astro";

const base = import.meta.env.BASE_URL;

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  isFullWidth?: boolean;
  position?: string;
}

const {
  id = "header",
  links = [],
  isFullWidth = false,
  position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    "z-40 flex-none bg-white mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out",
  ]}
  {...id ? { id } : {}}
>
  <div
    class:list={[
      "relative text-default py-2 px-5 md:py-1 md:pl-3 lg:pl-10 mx-auto w-full ",
      {
        "md:flex md:justify-between": position !== "center",
      },
      {
        "flex flex-col md:flex-row md:justify-between md:grid-cols-6 md:items-center":
          position === "center",
      },
      {
        "max-w-9xl": !isFullWidth,
      },
    ]}
  >
    <!-- Logo -->
    <div
      class:list={[
        { "mr-auto": position === "right" },
        "md:col-span-1 flex justify-between",
      ]}
    >
      <a class="flex items-start" href=`${base}`>
        <span class="">
          <img id="logo" class="svg" src={logo.src} alt={"SuperOffice"} />
        </span>
      </a>
      <Hamburger />
    </div>

    <!-- Nav -->
    <nav
      class="text-sm md:text-base md:col-span-5 items-center md:mx-2 lg:mx-5 w-full md:w-fit"
      aria-label="Main"
    >
      <div
        class="hidden md:flex md:justify-self-end md:h-10"
        id="primaryNav"
      >
        <ul
          class="font-medium w-full py-4 md:py-0 text-left flex flex-col md:flex-row md:self-center md:w-auto md:text-base md:text-[0.9375rem] tracking-[0.01rem] md:justify-center"
        >
          {
            links.map(({ text, href, links }, id) => (
              <li
                class:list={[
                  links?.length ? "dropdown" : "",
                  "py-1 md:py-0 md:px-2 lg:px-4 md:content-center w-full md:w-fit",
                  id != 5 ? "md:border-r md:border-black" : "",
                ]}
              >
                {links?.length ? (
                  <>
                    <button
                      type="button"
                      class="hover:text-link rounded px-4 py-1 flex items-center text-sm md:text-base"
                    >
                      {text}
                      <Icon
                        name="tabler:chevron-down"
                        class="w-3.5 h-3.5 ml-0.5 inline"
                      />
                    </button>

                    <ul class="text-left dropdown-menu md:border md:border-gray-300 backdrop-blur-md md:absolute hidden font-medium pl-4 md:pl-0 md:bg-white/90 min-w-[200px] drop-shadow-xl">
                      {links.map(({ text: text2, href: href2 }) => (
                        <li>
                          <a
                            class:list={[
                              "text-sm md:text-sm md:hover:bg-gray-100 md:hover:border-l-4 md:hover:border-superOfficeGreen hover:text-link py-1.5 md:py-2 px-5 block whitespace-no-wrap ",
                              { "aw-link-active": href2 === currentPath },
                            ]}
                            href={base + href2}
                          >
                            {text2}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </>
                ) : (
                  <a
                    class:list={[
                      "hover:text-link text-sm md:text-base rounded px-4 py-2 md:flex md:items-center text-right md:text-left",
                      { "aw-link-active": href === currentPath },
                    ]}
                    href={base + href}
                  >
                    {text}
                  </a>
                )}
              </li>
            ))
          }
        </ul>
        <div class="md:pl-3 md:pt-0.5">
          <Search
            id="search"
            className="pagefind-ui"
            uiOptions={{ showImages: false, excerptLength: 15 }}
          />
        </div>
      </div>
    </nav>

    <!-- <div
      class="relative hidden text-default lg:col-span-2 lg:flex items-center lg:mx-5 w-full lg:w-auto lg:justify-end"
      aria-label="Search"
    >
      <Search
        id="search1"
        className="pagefind-ui"
        uiOptions={{ showImages: false }}
      />
    </div> -->
    <!-- <div
      class:list={[
        { "ml-auto": position === "left" },
        "hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 bottom-0 p-3 md:p-0 md:justify-self-end",
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex"></div>
      </div>
    </div> -->
  </div>
</header>

<style>
  #header.scroll > div:first-child {
    @apply md:bg-white/90 md:backdrop-blur-md;
    box-shadow: 0 0.375rem 1.5rem 0 rgb(140 152 164 / 13%);
  }

  .dropdown:focus .dropdown-menu,
  .dropdown:focus-within .dropdown-menu,
  .dropdown:hover .dropdown-menu {
    display: block;
  }

  #primaryNav {
    transition: max-height 1s ease-out;
  }

  #primaryNav.open {
    max-height: 600px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const hamburgerButton = document.getElementById("hamburgerButton");
    const primaryNav = document.getElementById("primaryNav");

    hamburgerButton?.addEventListener("click", () => {
      primaryNav?.classList.toggle("hidden");
      primaryNav?.classList.toggle("open");
    });
  });
</script>
