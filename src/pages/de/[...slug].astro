---
import { getCollection, render } from "astro:content";
import MarkdownLayout from "@layouts/Markdown.astro";

import { getTableOfContents } from "../../utils/getTableOfContents";


//generating static paths from en collection
export async function getStaticPaths() {
  const docEntries = await getCollection("de");

  const headings = await Promise.all(
    docEntries.map(async (post) => {
      const data = await render(post);
      return data.headings;
    })
  );



  return docEntries.map((entry, index) => {

    //removing .md extention AND "src/content/en" from filepath
    const generatedSlug = entry.filePath?.replace("src/content/docs/de", "").replace(".md","");
    // console.log(generatedSlug)
    const tocData = getTableOfContents(`docs/de`, "/toc");
    return {
      params: { slug: `${generatedSlug}` },
      props: { entry, headings: headings[index], toc:tocData },
    };
  });
}

const { entry, headings, toc } = Astro.props;

const { Content } = await render(entry);
---

<MarkdownLayout
  frontmatter={entry.data}
  collection={entry.collection}
  slug={entry.id}
  headings={headings}
  TableOfContentData={toc}
>
  {Content ? <Content /> : "Loading content..."}
</MarkdownLayout>
