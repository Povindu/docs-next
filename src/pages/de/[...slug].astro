---
import { getDocEntries } from "@utils/contentUtils";
import { getLocalizedToc } from "@utils/tocUtils";
import { getContentSlug } from "@utils/slugUtils";
import MarkdownLayout from "@layouts/Markdown.astro";
import { getEntry } from "astro:content";
const language = "de" as const;

// Computed tocData once at module load (build-time) and reuse it for all pages
const tocData = await getLocalizedToc(language);

import { docsEntryIds } from "../../data/docs.ts";

// Generate static paths from de collection
export async function getStaticPaths() {
  const language = "de" as const;

  // const docEntries = (await Promise.all(
  //   docsEntryIds.map((id: string) => getEntry("de", id)),
  // )).filter((entry) => entry !== undefined);
  const docEntries = await getDocEntries(language);

  return docEntries.map((entry) => {
    // console.log(entry.id);

    const generatedSlug = getContentSlug(entry.filePath!, language);

    return {
      params: { slug: `${generatedSlug}` },
      props: { entry },
    };
  });
}

const { entry } = Astro.props;
---

<MarkdownLayout
  entry={entry}
  toc={tocData}
  language={language}
  isLearn={true}
/>
