---
import { getCollection, render } from "astro:content";
import MarkdownLayout from "@layouts/Markdown.astro";

import { getTableOfContents } from "../../utils/getTableOfContents";


//generating static paths from de collection
export async function getStaticPaths() {
  const docEntries = await getCollection("de");

  const headings = await Promise.all(
    docEntries.map(async (post) => {
      const data = await render(post);
      return data.headings;
    })
  );

  return docEntries.map((entry, index) => {

    //removing .md extention AND "src/content/de" from filepath
    const generatedSlug = entry.filePath?.replace("external-content/superoffice-docs/docs/de", "").replace(".md","");
    const category = generatedSlug?.split("/")[1];
    const isLearn =  entry.data.uid?.startsWith("help")
    const tocData = getTableOfContents(`docs/de/${isLearn ? "learn" : category}`);

    return {
      params: { slug: `${generatedSlug}` },
      props: { entry, headings: headings[index], tocData, isLearn},
    };
  });
}

const { entry, headings, tocData, isLearn } = Astro.props;

const { Content } = await render(entry);
---

<MarkdownLayout
  frontmatter={entry.data}
  collection={entry.collection}
  slug={entry.id}
  headings={headings}
  TableOfContentData={tocData}
  isLearn={isLearn}
  lang="de"
>
  {Content ? <Content /> : "Loading content..."}
</MarkdownLayout>
