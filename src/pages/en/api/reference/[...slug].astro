---
import { getCollection } from "astro:content";
import type { TocData } from "~/types/TableOfContentTypes";
import { getTocByPath } from "@utils/tocUtils";
import { getHeadings } from "@utils/contentUtils";
import { stripFilePathAndExtension } from "~/utils/slugUtils";
import MarkdownLayout from "@layouts/Markdown.astro";

//const language = "en" as const;

//generating static paths from en collection
export async function getStaticPaths() {
  const referencePath = `superoffice-docs/docs/en/api/reference` as const;

  const docEntries = await getCollection("reference-docs");
  const headings = await getHeadings(docEntries);

  const tocCache = new Map<string, TocData>();

  return Promise.all(
    docEntries.map(async (entry, index) => {
      const slug = stripFilePathAndExtension(
        entry.filePath!,
        referencePath,
        true,
      );

      const api = slug?.split("/")[0];

      if (!tocCache.has(api)) {
        tocCache.set(api, await getTocByPath(`${referencePath}/${api}`));
      }

      return {
        params: { slug: `${slug}` },
        props: {
          entry,
          headings: headings[index],
          tocData: tocCache.get(api)!,
        },
      };
    }),
  );
}

const { entry, headings, tocData } = Astro.props;
---

<MarkdownLayout
  entry={entry}
  headings={headings}
  toc={tocData}
/>
