---
import MarkdownLayout from "@layouts/Markdown.astro";
import type { TocData } from "~/types/TableOfContentTypes";
import { getTocByPath } from "@utils/tocUtils";
import { getMarkdownSlugs } from "~/utils/scanMarkdownSlugs";
import { readMarkdownFile } from "~/utils/readMarkdown";

export async function getStaticPaths() {
  const referencePath = `superoffice-docs/docs/en/api/reference`;

  const slugs = await getMarkdownSlugs();

  const tocCache = new Map<string, TocData>();

  return Promise.all(
    slugs.map(async (slug) => {
      // Assuming first slug segment is your "api" segment for toc
      const api = slug.split("/")[0];

      if (!tocCache.has(api)) {
        tocCache.set(api, await getTocByPath(`${referencePath}/${api}`));
      }

      return {
        params: { slug },
        props: {
          slug,
          tocData: tocCache.get(api)!,
        },
      };
    })
  );
}

const { slug, tocData } = Astro.props;

const entry = await readMarkdownFile(slug);
if (!entry) throw new Error(`Page not found: ${slug}`);
---

<MarkdownLayout entry={entry} toc={tocData} />
