---
import { getCollection, render } from "astro:content";
import MarkdownLayout from "@layouts/Markdown.astro";
import { getTableOfContents } from "@utils/getTableOfContents";
import WebApiLayout from "@layouts/WebApiLayout.astro";

//generating static paths from en collection
export async function getStaticPaths() {
  const docEntries = await getCollection("webapi");
  const headings = await Promise.all(
    docEntries.map(async (post) => {
      const data = await render(post);
      return data.headings;
    })
  );

  return docEntries.map((entry, index) => {
    const generatedSlug = entry.filePath
      ?.replace("src/content/docs/en/api/reference/webapi", "")
      .replace(".yml", "");
    const tocData = getTableOfContents(`docs/en/api/reference/webapi`, "/toc", true);
    return {
      params: { slug: `${generatedSlug}` },
      props: { entry, headings: headings[index], tocData },
    };
  });
}

const { entry, headings, tocData } = Astro.props;
---

<MarkdownLayout
  frontmatter={entry.data}
  collection={entry.collection}
  slug={entry.id}
  headings={headings}
  TableOfContentData={tocData}
  isLearn={false}
  isWebAPI={true}
>
  <WebApiLayout data={entry.data} />
</MarkdownLayout>
