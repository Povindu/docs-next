---
import { getCollection } from "astro:content";
import { getSegmentToc } from "@utils/tocUtils";
import { getHeadings } from "@utils/contentUtils";
import { getApiContentSlug } from "@utils/slugUtils";
import MarkdownPage from "@components/MarkdownPage.astro";

const language = "en" as const;
const segment = "api" as const;

// Compute tocData once at module load (build-time) and reuse it for all pages
const tocData = await getSegmentToc(language, segment);

// Generate static paths from de collection
export async function getStaticPaths() {
  const docEntries = await getCollection("api-docs");
  const headings = await getHeadings(docEntries);

  return docEntries.map((entry, index) => {
    const generatedSlug = getApiContentSlug(entry.filePath!);

    return {
      params: { slug: generatedSlug },
      props: { entry, headings: headings[index] },
    };
  });
}

const { entry, headings } = Astro.props;
---

<MarkdownPage
  entry={entry}
  headings={headings}
  toc={tocData}
  language={language}
/>
